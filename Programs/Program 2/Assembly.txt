// constant stack: 32
start
xor r1 r1 //r1 is i = 0
//Q:
nop
nop
tap r1
inc r1
con r2
lsl r2 // r2 = 64
ldr r2 r0 // r0 is data_mem[64]
con r3 // r3 = 0x20
xor r0 r3
slf r3
//P:
nop
con r3
ldr r2 r0
xlf r0
inc r2
cmp r0 r3
bne 1100 // goto Q
con r0
lsl r0
con r3
lsr r3
lsr r3
add r0 r3
inc r3
inc r3 // making 74
cmp r3 r2
blt 1100 // goto P
xor r1 r1
con r2
lsl r2 // r2 = 64
ldr r2 r0 // r0 is data_mem[64]
con r3 // r3 = 0x20
xor r0 r3
slf r3
mov r2 r3
lsl r3
not r3
// A:
add r2 r1
ldr r1 r0
sub r2 r1
xlf r0
and r3 r0
str r1 r0
inc r1
cmp r2 r1
blt 1110 // goto A
end